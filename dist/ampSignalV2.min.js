(() => {
  (async function () {
    let o = document.getElementById("zzazz-signal-div"),
      y = o?.getAttribute("zzazz-t-id"),
      P = "https://beta.a.zzazz.com/event",
      N = `https://cdn.zzazz.com/widget-rules/${y}.json`,
      I = "https://beta.v.zzazz.com/v3/price",
      a = { user_id: null, event_id: null },
      l = [],
      d = !1,
      u = !1,
      s = null,
      f = !1,
      m = null,
      z = null,
      v = null,
      p = !1,
      w = () => ({
        width: window?.innerWidth || 0,
        height: window?.innerHeight || 0,
      }),
      g = () => ({
        width: window?.screen?.width || 0,
        height: window?.screen?.height || 0,
      }),
      k = ({ user_id: e, event_id: t }) => {
        e && !a.user_id && (a.user_id = e),
          t && !a.event_id && ((a.event_id = t), (d = !0), b());
      };
    function E(e, t) {
      let n;
      return function (...i) {
        clearTimeout(n),
          (n = setTimeout(() => {
            e.apply(this, i);
          }, t));
      };
    }
    let B = E(() => {
        U();
      }, 500),
      _ = E((e) => {
        C(e);
      }, 500);
    window.addEventListener("scroll", B), window.addEventListener("click", _);
    async function c(e, t = {}) {
      let n = { type: e, ...t, id: a.event_id, pageId: a.event_id },
        i = {
          Accept: "application/json",
          "Content-Type": "application/json",
          "tracking-id": `${y}`,
          ...(a.user_id && { "user-id": a.user_id }),
        };
      try {
        let r = await fetch(P, {
            method: "POST",
            credentials: "include",
            headers: i,
            body: JSON.stringify(n),
          }),
          h = await r.json().catch(() => null);
        return { ok: r.ok, data: h };
      } catch (r) {
        return (
          console.error(`Failed to send event ${e}:`, r), { ok: !1, data: null }
        );
      }
    }
    function L(e, t = {}) {
      l.push({ type: e, payload: t }), b();
    }
    async function b() {
      if (!(!d || u)) {
        for (u = !0; l.length; ) {
          let { type: e, payload: t } = l.shift();
          await c(e, t);
        }
        u = !1;
      }
    }
    async function D(e) {
      clearTimeout(m), (z = e), (p = !1), (v = new Date().getTime());
      let t = {
          browser: w(),
          device: g(),
          url: e,
          referrer: document.referrer,
        },
        { ok: n, data: i } = await c("pageview", t);
      n && i && k(i), T(e);
    }
    async function T(e) {
      if (e === z) {
        let t = new Date().getTime() - v > 6e5 ? 6e4 : 5e3;
        try {
          await c("poll");
        } catch (n) {
          console.error(n);
        } finally {
          m = setTimeout(() => T(e), t);
        }
      }
    }
    async function O(e) {
      if (!p) {
        if (!d) return L("price", e);
        try {
          await c("price", e), (p = !0);
        } catch (t) {
          console.log(t);
        }
      }
    }
    async function U() {
      try {
        let e = {
          scrollPosition: window?.scrollY || 0,
          browser: w(),
          device: g(),
        };
        await c("scroll", e);
      } catch (e) {
        console.log(e);
      }
    }
    function j(e) {
      if (!e) return null;
      if (e.tagName === "A" && e.href) return e.href;
      if (e.tagName === "BUTTON" && e.formAction) return e.formAction;
      if (e.tagName === "BUTTON" && e.getAttribute("data-url"))
        return e.getAttribute("data-url");
      let t = e.parentNode;
      for (; t; ) {
        let n = t.tagName;
        if (n === "A" && t.href) return t.href;
        if (n === "BUTTON" && t.formAction) return t.formAction;
        if (n === "BUTTON" && t.getAttribute("data-url"))
          return t.getAttribute("data-url");
        t = t.parentNode;
      }
      return null;
    }
    async function C(e) {
      try {
        let t = e?.target,
          n = {
            browser: w(),
            device: g(),
            element: {
              tag: t?.tagName?.toLowerCase() || null,
              url: j(t) || null,
              position: { x: e?.pageX || 0, y: e?.pageY || 0 },
            },
          };
        await c("click", n);
      } catch (t) {
        console.log(t);
      }
    }
    async function S() {
      try {
        return (
          (await (await fetch(`${N}?dt=${Date.now()}`)).json()).showWidget ===
          !0
        );
      } catch (e) {
        return console.error("Enable API error:", e), !1;
      }
    }
    async function A() {
      let e = o?.getAttribute("data-url");
      if (e)
        try {
          let i = (
            await (
              await fetch(`${I}`, {
                method: "POST",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify({ urls: [e], currency: "inr" }),
              })
            ).json()
          )[e];
          if (!i || isNaN(i.qap)) {
            o.classList.add("hidden"), (f = !1);
            return;
          }
          let r = i.qap.toFixed(2);
          O({ url: e, price: i.qap, currency: "inr" });
          let h = document.getElementById("zzazz-price"),
            $ = document.getElementById("zzazz-trend-up"),
            x = document.getElementById("zzazz-trend-down");
          (h.firstChild.textContent = `${r} `),
            f || (o.classList.remove("hidden"), (f = !0)),
            s !== null &&
              (($.style.display = r >= s ? "flex" : "none"),
              (x.style.display = r < s ? "flex" : "none")),
            (s = r);
        } catch (t) {
          console.error("Price fetch error:", t), o.classList.add("hidden");
        }
    }
    if (!(await S())) {
      console.warn("Price pill disabled remotely."), o?.classList.add("hidden");
      return;
    }
    console.log("Price pill enabled by remote rules."),
      D(window.location.origin),
      A(),
      setInterval(A, 3e3);
  })();
})();
